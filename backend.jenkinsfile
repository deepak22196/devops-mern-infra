pipeline {
    agent any

    environment {
        NODE_HOME = '/usr/local/bin/node' // Update this path as needed
        NODE_VERSION = '16.5.0' // Update to the desired Node.js version
        NODE_DIR = "${env.WORKSPACE}/node-v${NODE_VERSION}-linux-x64"
        PATH = "${NODE_DIR}/bin:${env.PATH}"
        ARTIFACT_PATH = 'build/latest-build.zip' // Path to your artifact on Jenkins agent
    }

    stages {
        stage('Checkout Backend Code') {
            steps {
                echo 'checking out code'
                git branch: 'main', url: 'https://github.com/deepak22196/devops-mern-backend.git'
                echo 'checking out complete'
            }
        }
        stage('Set Up Node.js') {
    steps {
        echo 'Installing Node.js...'
        sh '''
        NODE_VERSION=${NODE_VERSION}
        NODE_DIR=${NODE_DIR}
        mkdir -p ${NODE_DIR}
        
        # Install nvm (Node Version Manager)
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash

        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

        # Download and install Node.js
        nvm install ${NODE_VERSION}

        # Use the installed Node.js version
        nvm use ${NODE_VERSION}

        # Verify the Node.js installation
        node -v
        npm -v
        '''
        echo 'Node.js installation completed'
    }
}

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }
        
        stage('Build Artifact') {
            steps {
                // Add your build commands here, e.g., for a Node.js project
                sh 'npm run build'
            }
        }
        stage('Deploy') {
            steps {
                script {
                    
                    def s3Bucket = 'jobify-artifacts-bucket'
                    def s3Path = "latest-build.zip"
                    def snsTopicArn = "arn:aws:sns:ap-south-1:654654538309:jobify-build-updates"

                    // Upload the artifact to S3
                    sh "aws s3 cp ${ARTIFACT_PATH} s3://${s3Bucket}/${s3Path}"

                    // Publish SNS message
                    sh """
                    aws sns publish --topic-arn ${snsTopicArn} --message "New build uploaded to S3"
                    """
                }
            }
        }
    }
}
